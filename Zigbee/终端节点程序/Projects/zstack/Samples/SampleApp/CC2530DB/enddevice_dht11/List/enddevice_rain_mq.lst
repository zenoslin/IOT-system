###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         20/Jan/2018  13:39:55 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135    #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\Source\enddevice_rain_m #
#                          q.c                                                #
#    Command line       =  -f "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11      #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func                 #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ #
#                          \M0012-ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DZIGBEEPRO -DSECURE=0                       #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00001000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF00                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ #
#                          \M0012-ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\Source\enddevice_rain_mq.c" -D              #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D xMT_TASK -D           #
#                          xMT_SYS_FUNC -D xMT_ZDO_FUNC -D HAL_ADC -lC        #
#                          "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135   #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\enddevice_dht1 #
#                          1\List\" -lA "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB  #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\enddevice_dht11\List\"             #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135   #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\enddevice_dht1 #
#                          1\Obj\" -e --no_code_motion --debug --core=plain   #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼ #
#                          Æ\M0012-ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷         #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M #
#                          0012-ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷            #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\Source\" -I                     #
#                          "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135   #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\ZMain #
#                          \TI2530DB\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-Z #
#                          B DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                  #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\hal\incl #
#                          ude\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB      #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\hal\targ #
#                          et\CC2530EB\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012 #
#                          -ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\incl #
#                          ude\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB      #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\high #
#                          _level\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB   #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\low_ #
#                          level\srf04\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012 #
#                          -ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\low_ #
#                          level\srf04\single_chip\" -I                       #
#                          "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135   #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \Components\mt\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0 #
#                          012-ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷             #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\osal\inc #
#                          lude\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB     #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\services #
#                          \saddr\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB   #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\services #
#                          \sdata\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB   #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\af #
#                          \" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11   #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\nw #
#                          k\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11  #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\sa #
#                          pi\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB       #
#                          DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                    #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\se #
#                          c\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11  #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\sy #
#                          s\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11  #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\zd #
#                          o\" -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11  #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\zmac\"   #
#                          -I "E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11      #
#                          mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷                          #
#                          ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w #
#                          \" -Ohz --require_prototypes                       #
#    List file          =  E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135    #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\enddevice_dht1 #
#                          1\List\enddevice_rain_mq.lst                       #
#    Object file        =  E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135    #
#                          ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\enddevice_dht1 #
#                          1\Obj\enddevice_rain_mq.r51                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\µç×ÓÉè¼Æ×÷Æ·\zigbeeÉè¼Æ\M0012-ZB DHT11 mq135 ¹âÃô mysql ÔÆ·þÎñÆ÷ ¿ØÖÆtb£ºfgsazxx\ÎÂÊª¶È\Projects\zstack\Samples\SampleApp\Source\enddevice_rain_mq.c
      1          
      2          /*********************************************************************
      3           * INCLUDES
      4           */
      5          #include "OSAL.h"
      6          #include "ZGlobals.h"
      7          #include "AF.h"
      8          #include "aps_groups.h"
      9          #include "ZDApp.h"
     10          
     11          #include "SampleApp.h"
     12          #include "SampleAppHw.h"
     13          
     14          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8f
   \   unsigned char volatile __sfr P0INP
   \                     P0INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     15          
     16          /* HAL */
     17          #include "hal_lcd.h"
     18          #include "hal_led.h"
     19          #include "hal_key.h"
     20          
     21          #include  "MT_UART.h" //´Ë´¦ÓÃÓÚ´®¿Ú
     22          
     23          #include  "hal_adc.h"   //
     24          #include  "stdio.h"   //
     25          
     26          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     27          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0000         DW 0
     28          {
     29            SAMPLEAPP_PERIODIC_CLUSTERID,
     30            SAMPLEAPP_FLASH_CLUSTERID
     31          };
     32          

   \                                 In  segment XDATA_ROM_C, align 1
     33          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   03           DB 3
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   03           DB 3
   \   00000A   ....         DW SampleApp_ClusterList
     34          {
     35            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
     36            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     37            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     38            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     39            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     40            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     41            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
     42            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     43            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
     44          };
     45          
     46          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     47          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     48          
     49          /*********************************************************************
     50           * EXTERNAL VARIABLES
     51           */
     52          
     53          /*********************************************************************
     54           * EXTERNAL FUNCTIONS
     55           */
     56          
     57          /*********************************************************************
     58           * LOCAL VARIABLES
     59           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     60          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     61                                    // This variable will be received when
     62                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     63          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     64          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     65          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     66          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     67          afAddrType_t SampleApp_Periodic_DstAddr;
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     68          afAddrType_t SampleApp_Flash_DstAddr;
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     69          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     70          afAddrType_t Point_To_Point_DstAddr;//µã¶ÔµãÍ¨ÐÅ¶¨Òå
   \                     Point_To_Point_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     71          
     72          
     73          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     74          uint8 Send_Message[21];
   \                     Send_Message:
   \   000000                DS 21
   \   000015                REQUIRE __INIT_XDATA_Z
     75          #define Rain  P0_5

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     76          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
     77          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
     78            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
     79            SampleApp_NwkState = DEV_INIT;
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
     80            SampleApp_TransID = 0;
   \   000011   90....       MOV     DPTR,#SampleApp_TransID
   \   000014   E4           CLR     A
   \   000015   F0           MOVX    @DPTR,A
     81            
     82            MT_UartInit();//´®¿Ú³õÊ¼»¯
   \   000016                ; Setup parameters for call to function MT_UartInit
   \   000016   12....       LCALL   ??MT_UartInit?relay
     83            MT_UartRegisterTaskID(task_id);//µÇ¼ÇÈÎÎñºÅ
   \   000019                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000019   EE           MOV     A,R6
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??MT_UartRegisterTaskID?relay
     84            HalUARTWrite(0,"Hello World\n",12); //£¨´®¿Ú0£¬'×Ö·û'£¬×Ö·û¸öÊý¡££©
   \   00001E                ; Setup parameters for call to function HalUARTWrite
   \   00001E   7C0C         MOV     R4,#0xc
   \   000020   7D00         MOV     R5,#0x0
   \   000022   7A..         MOV     R2,#`?<Constant "Hello World\\n">` & 0xff
   \   000024   7B..         MOV     R3,#(`?<Constant "Hello World\\n">` >> 8) & 0xff
   \   000026   7900         MOV     R1,#0x0
   \   000028   12....       LCALL   ??HalUARTWrite?relay
     85            //ÓêµÎ´«¸ÐÆ÷³õÊ¼»¯ P0.5
     86            P0SEL &=~0x20; //×÷ÎªÆÕÍ¨ IO ¿Ú
   \   00002B   53F3DF       ANL     0xf3,#0xdf
     87            P0DIR |= 0x20; //P0.5 ¶¨ÒåÎªÊä³ö
   \   00002E   43FD20       ORL     0xfd,#0x20
     88            P0INP &=~0x20; //´ò¿ªÉÏÀ­
   \   000031   538FDF       ANL     0x8f,#0xdf
     89            // Device hardwa6re initialization can be added here or in main() (Zmain.c).
     90            // If the hardware is application specific - add it here.
     91            // If the hardware is other parts of the device add it in main().
     92          
     93           #if defined ( BUILD_ALL_DEVICES )
     94            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
     95            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
     96            // together - if they are - we will start up a coordinator. Otherwise,
     97            // the device will start as a router.
     98            if ( readCoordinatorJumper() )
     99              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    100            else
    101              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    102          #endif // BUILD_ALL_DEVICES
    103          
    104          #if defined ( HOLD_AUTO_START )
    105            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    106            //  from starting the device and wait for the application to
    107            //  start the device.
    108            ZDOInitDevice(0);
    109          #endif
    110          
    111            
    112            //µã²¥Í¨Ñ¶¶¨Òå
    113              Point_To_Point_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;//µã²¥
   \   000034   90....       MOV     DPTR,#Point_To_Point_DstAddr + 8
   \   000037   7402         MOV     A,#0x2
   \   000039   F0           MOVX    @DPTR,A
    114              Point_To_Point_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00003A   A3           INC     DPTR
   \   00003B   7414         MOV     A,#0x14
   \   00003D   F0           MOVX    @DPTR,A
    115              Point_To_Point_DstAddr.addr.shortAddr = 0x0000; //·¢¸øÐ­µ÷Æ÷
   \   00003E   90....       MOV     DPTR,#Point_To_Point_DstAddr
   \   000041   E4           CLR     A
   \   000042   F0           MOVX    @DPTR,A
   \   000043   A3           INC     DPTR
   \   000044   F0           MOVX    @DPTR,A
    116          
    117          
    118            // Fill out the endpoint description.
    119            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   000045   90....       MOV     DPTR,#SampleApp_epDesc
   \   000048   7414         MOV     A,#0x14
   \   00004A   F0           MOVX    @DPTR,A
    120            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   00004B   A3           INC     DPTR
   \   00004C   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   00004E   F0           MOVX    @DPTR,A
   \   00004F   A3           INC     DPTR
   \   000050   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000052   F0           MOVX    @DPTR,A
    121            SampleApp_epDesc.simpleDesc
    122                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   000053   A3           INC     DPTR
   \   000054   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000056   F0           MOVX    @DPTR,A
   \   000057   A3           INC     DPTR
   \   000058   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   00005A   F0           MOVX    @DPTR,A
    123            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   00005B   A3           INC     DPTR
   \   00005C   E4           CLR     A
   \   00005D   F0           MOVX    @DPTR,A
    124          
    125            // Register the endpoint description with the AF
    126            afRegister( &SampleApp_epDesc );
   \   00005E                ; Setup parameters for call to function afRegister
   \   00005E   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   000060   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   000062   12....       LCALL   ??afRegister?relay
    127          }
   \   000065   7F01         MOV     R7,#0x1
   \   000067   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00006A                REQUIRE P0SEL
   \   00006A                REQUIRE P0DIR
   \   00006A                REQUIRE P0INP
    128          
    129          /*********************************************************************
    130           * @fn      SampleApp_ProcessEvent
    131           *
    132           * @brief   Generic Application Task event processor.  This function
    133           *          is called to process all events for the task.  Events
    134           *          include timers, messages and any other user defined events.
    135           *
    136           * @param   task_id  - The OSAL assigned task ID.
    137           * @param   events - events to process.  This is a bit map and can
    138           *                   contain more than one event.
    139           *
    140           * @return  none
    141           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    142          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    143          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    144            afIncomingMSGPacket_t *MSGpkt;
    145            (void)task_id;  // Intentionally unreferenced parameter
    146          
    147            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   605D         JZ      ??SampleApp_ProcessEvent_0
    148            {
    149              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   8026         SJMP    ??SampleApp_ProcessEvent_1
    150              while ( MSGpkt )
    151              {
    152                switch ( MSGpkt->hdr.event )
    153                {
    154                 
    155                  // Received when a messages is received (OTA) for this endpoint
    156                  case AF_INCOMING_MSG_CMD:
    157                    SampleApp_MessageMSGCB( MSGpkt );
    158                    break;
    159          
    160                  // Received whenever the device changes state in the network
    161                  case ZDO_STATE_CHANGE:
    162                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   F0           MOVX    @DPTR,A
    163                    if ( //(SampleApp_NwkState == DEV_ZB_COORD)|| //Ð­µ÷Æ÷²»¸ø×Ô¼ºµã²¥
    164                         (SampleApp_NwkState == DEV_ROUTER)
    165                        || (SampleApp_NwkState == DEV_END_DEVICE) )
   \   000015   6407         XRL     A,#0x7
   \   000017   6005         JZ      ??SampleApp_ProcessEvent_3
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   6406         XRL     A,#0x6
   \   00001C   7010         JNZ     ??SampleApp_ProcessEvent_4
    166                    {
    167                      // Start sending the periodic message in a regular interval.
    168                      osal_start_timerEx( SampleApp_TaskID,
    169                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    170                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \                     ??SampleApp_ProcessEvent_3:
   \   00001E                ; Setup parameters for call to function osal_start_timerEx
   \   00001E   7CDC         MOV     R4,#-0x24
   \   000020   7D05         MOV     R5,#0x5
   \   000022   7A01         MOV     R2,#0x1
   \   000024   7B00         MOV     R3,#0x0
   \   000026   90....       MOV     DPTR,#SampleApp_TaskID
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F9           MOV     R1,A
   \   00002B   12....       LCALL   ??osal_start_timerEx?relay
    171                    }
    172                    else
    173                    {
    174                      // Device is no longer in the network
    175                    }
    176                    break;
    177          
    178                  default:
    179                    break;
    180                }
    181          
    182                // Release the memory
    183                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_4:
   \   00002E                ; Setup parameters for call to function osal_msg_deallocate
   \   00002E   AA..         MOV     R2,?V0 + 0
   \   000030   AB..         MOV     R3,?V0 + 1
   \   000032   12....       LCALL   ??osal_msg_deallocate?relay
    184          
    185                // Next - if one is available
    186                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000035                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   000035   90....       MOV     DPTR,#SampleApp_TaskID
   \   000038   E0           MOVX    A,@DPTR
   \   000039   F9           MOV     R1,A
   \   00003A   12....       LCALL   ??osal_msg_receive?relay
   \   00003D   8A..         MOV     ?V0 + 0,R2
   \   00003F   8B..         MOV     ?V0 + 1,R3
   \   000041   E5..         MOV     A,?V0 + 0
   \   000043   45..         ORL     A,?V0 + 1
   \   000045   601A         JZ      ??SampleApp_ProcessEvent_5
   \   000047   85..82       MOV     DPL,?V0 + 0
   \   00004A   85..83       MOV     DPH,?V0 + 1
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   24E6         ADD     A,#-0x1a
   \   000050   6006         JZ      ??SampleApp_ProcessEvent_6
   \   000052   2449         ADD     A,#0x49
   \   000054   60B9         JZ      ??SampleApp_ProcessEvent_2
   \   000056   80D6         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_6:
   \   000058                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000058   AA..         MOV     R2,?V0 + 0
   \   00005A   AB..         MOV     R3,?V0 + 1
   \   00005C   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   00005F   80CD         SJMP    ??SampleApp_ProcessEvent_4
    187              }
    188          
    189              // return unprocessed events
    190              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_5:
   \   000061   EE           MOV     A,R6
   \   000062   FA           MOV     R2,A
   \   000063   EF           MOV     A,R7
   \   000064   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_7:
   \   000066   FB           MOV     R3,A
   \   000067   02....       LJMP    ??SampleApp_ProcessEvent_8 & 0xFFFF
    191            }
    192          
    193            // Send a message out - This event is generated by a timer
    194            //  (setup in SampleApp_Init()).
    195            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \                     ??SampleApp_ProcessEvent_0:
   \   00006A   EE           MOV     A,R6
   \   00006B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00006D   4003         JC      $+5
   \   00006F   02....       LJMP    ??SampleApp_ProcessEvent_9 & 0xFFFF
    196            {
    197              
    198              Send_Message[0]='#';
   \   000072   90....       MOV     DPTR,#Send_Message
   \   000075   7423         MOV     A,#0x23
   \   000077   F0           MOVX    @DPTR,A
    199               //MQ´«¸ÐÆ÷Êý¾Ý²É¼¯
    200            int16 MQ2= HalAdcRead(HAL_ADC_CHANNEL_4, HAL_ADC_RESOLUTION_14);
    201            MQ2=(float)MQ2/8192.0*100; 
                      ^
Warning[Pa093]: implicit conversion from floating point to integer
    202            MQ2=MQ2-10;
   \   000078                ; Setup parameters for call to function HalAdcRead
   \   000078   7A04         MOV     R2,#0x4
   \   00007A   7904         MOV     R1,#0x4
   \   00007C   12....       LCALL   ??HalAdcRead?relay
   \   00007F   8A..         MOV     ?V0 + 0,R2
   \   000081   EB           MOV     A,R3
   \   000082   F5..         MOV     ?V0 + 1,A
   \   000084   33           RLC     A
   \   000085   95E0         SUBB    A,0xE0 /* A   */
   \   000087   F5..         MOV     ?V0 + 2,A
   \   000089   F5..         MOV     ?V0 + 3,A
   \   00008B   78..         MOV     R0,#?V0 + 0
   \   00008D   12....       LCALL   ?L_TO_FLT
   \   000090   90....       MOV     DPTR,#__Constant_39000000
   \   000093   78..         MOV     R0,#?V0 + 4
   \   000095   12....       LCALL   ?L_MOV_X
   \   000098   78..         MOV     R0,#?V0 + 0
   \   00009A   79..         MOV     R1,#?V0 + 4
   \   00009C   12....       LCALL   ?FLT_MUL
   \   00009F   90....       MOV     DPTR,#__Constant_42c80000
   \   0000A2   78..         MOV     R0,#?V0 + 4
   \   0000A4   12....       LCALL   ?L_MOV_X
   \   0000A7   78..         MOV     R0,#?V0 + 0
   \   0000A9   79..         MOV     R1,#?V0 + 4
   \   0000AB   12....       LCALL   ?FLT_MUL
   \   0000AE   78..         MOV     R0,#?V0 + 0
   \   0000B0   12....       LCALL   ?FLT_TO_L
   \   0000B3   E5..         MOV     A,?V0 + 0
   \   0000B5   24F6         ADD     A,#-0xa
   \   0000B7   FC           MOV     R4,A
   \   0000B8   E5..         MOV     A,?V0 + 1
   \   0000BA   34FF         ADDC    A,#-0x1
   \   0000BC   FD           MOV     R5,A
    203            if(MQ2<0) MQ2=0;
   \   0000BD   C3           CLR     C
   \   0000BE   EC           MOV     A,R4
   \   0000BF   9400         SUBB    A,#0x0
   \   0000C1   ED           MOV     A,R5
   \   0000C2   65D0         XRL     A,PSW
   \   0000C4   33           RLC     A
   \   0000C5   5004         JNC     ??SampleApp_ProcessEvent_10
   \   0000C7   7C00         MOV     R4,#0x0
   \   0000C9   8010         SJMP    ??SampleApp_ProcessEvent_11
    204            if(MQ2>99)  MQ2=99;
   \                     ??SampleApp_ProcessEvent_10:
   \   0000CB   C3           CLR     C
   \   0000CC   EC           MOV     A,R4
   \   0000CD   9464         SUBB    A,#0x64
   \   0000CF   ED           MOV     A,R5
   \   0000D0   9400         SUBB    A,#0x0
   \   0000D2   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0000D4   65D0         XRL     A,PSW
   \   0000D6   33           RLC     A
   \   0000D7   4004         JC      ??SampleApp_ProcessEvent_12
   \   0000D9   7C63         MOV     R4,#0x63
   \                     ??SampleApp_ProcessEvent_11:
   \   0000DB   7D00         MOV     R5,#0x0
    205            
    206            Send_Message[0]='#';
   \                     ??SampleApp_ProcessEvent_12:
   \   0000DD   90....       MOV     DPTR,#Send_Message
   \   0000E0   7423         MOV     A,#0x23
   \   0000E2   12....       LCALL   ?Subroutine0 & 0xFFFF
    207            Send_Message[1]=MQ2/10+48;
   \                     ??CrossCallReturnLabel_0:
   \   0000E5   12....       LCALL   ?S_DIV_MOD
   \   0000E8   E8           MOV     A,R0
   \   0000E9   2430         ADD     A,#0x30
   \   0000EB   A3           INC     DPTR
   \   0000EC   12....       LCALL   ?Subroutine0 & 0xFFFF
    208            Send_Message[2]=MQ2%10+48;
   \                     ??CrossCallReturnLabel_1:
   \   0000EF   12....       LCALL   ?S_DIV_MOD
   \   0000F2   EA           MOV     A,R2
   \   0000F3   2430         ADD     A,#0x30
   \   0000F5   A3           INC     DPTR
   \   0000F6   F0           MOVX    @DPTR,A
    209            if(Rain==0) //¼ì²âµ½ÓÐÓê
   \   0000F7   A285         MOV     C,0x80.5
   \   0000F9   A3           INC     DPTR
   \   0000FA   4004         JC      ??SampleApp_ProcessEvent_13
    210            {
    211              Send_Message[3]='Y';
   \   0000FC   7459         MOV     A,#0x59
   \   0000FE   8002         SJMP    ??SampleApp_ProcessEvent_14
    212            }else 
    213            {
    214              Send_Message[3]='N';
   \                     ??SampleApp_ProcessEvent_13:
   \   000100   744E         MOV     A,#0x4e
   \                     ??SampleApp_ProcessEvent_14:
   \   000102   F0           MOVX    @DPTR,A
    215            }
    216              //Êý¾Ý·¢ËÍº¯Êý£¬½«²É¼¯µ½µÄÐÅÏ¢·¢ËÍ¸øÐ­µ÷Æ÷
    217              if ( AF_DataRequest( &Point_To_Point_DstAddr,
    218                                   &SampleApp_epDesc,
    219                                   SAMPLEAPP_END3,
    220                                   4,//osal_strlen(Send_Message),//·¢ËÍÊý¾Ý¸öÊý
    221                                   Send_Message,//·¢ËÍÊý¾ÝÖ¸Õë
    222                                   &SampleApp_TransID,
    223                                   AF_DISCV_ROUTE,
    224                                   AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000103                ; Setup parameters for call to function AF_DataRequest
   \   000103   75..1E       MOV     ?V0 + 0,#0x1e
   \   000106   78..         MOV     R0,#?V0 + 0
   \   000108   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00010B   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00010E   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000111   78..         MOV     R0,#?V0 + 0
   \   000113   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000116   75....       MOV     ?V0 + 0,#Send_Message & 0xff
   \   000119   75....       MOV     ?V0 + 1,#(Send_Message >> 8) & 0xff
   \   00011C   78..         MOV     R0,#?V0 + 0
   \   00011E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000121   75..04       MOV     ?V0 + 0,#0x4
   \   000124   75..00       MOV     ?V0 + 1,#0x0
   \   000127   78..         MOV     R0,#?V0 + 0
   \   000129   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00012C   75..1E       MOV     ?V0 + 0,#0x1e
   \   00012F   78..         MOV     R0,#?V0 + 0
   \   000131   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000134   7920         MOV     R1,#0x20
   \   000136   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000138   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   00013A   7A..         MOV     R2,#Point_To_Point_DstAddr & 0xff
   \   00013C   7B..         MOV     R3,#(Point_To_Point_DstAddr >> 8) & 0xff
   \   00013E   12....       LCALL   ??AF_DataRequest?relay
   \   000141   7409         MOV     A,#0x9
   \   000143   12....       LCALL   ?DEALLOC_XSTACK8
    225              {
    226              }
    227                else
    228                {
    229                  // Error occurred in request to send.
    230                }
    231              
    232               
    233              // Setup to send message again in normal period (+ a little jitter)
    234              //¶¨Ê±º¯Êý£¬Ã¿¸ö1500ms·¢ËÍÒ»´ÎÊý¾Ý¸øÐ­µ÷Æ÷
    235              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    236                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   000146                ; Setup parameters for call to function osal_rand
   \   000146   12....       LCALL   ??osal_rand?relay
   \   000149                ; Setup parameters for call to function osal_start_timerEx
   \   000149   EA           MOV     A,R2
   \   00014A   24DC         ADD     A,#-0x24
   \   00014C   FC           MOV     R4,A
   \   00014D   E4           CLR     A
   \   00014E   3405         ADDC    A,#0x5
   \   000150   FD           MOV     R5,A
   \   000151   7A01         MOV     R2,#0x1
   \   000153   7B00         MOV     R3,#0x0
   \   000155   90....       MOV     DPTR,#SampleApp_TaskID
   \   000158   E0           MOVX    A,@DPTR
   \   000159   F9           MOV     R1,A
   \   00015A   12....       LCALL   ??osal_start_timerEx?relay
    237          
    238              // return unprocessed events
    239              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   00015D   EE           MOV     A,R6
   \   00015E   6401         XRL     A,#0x1
   \   000160   FA           MOV     R2,A
   \   000161   EF           MOV     A,R7
   \   000162   02....       LJMP    ??SampleApp_ProcessEvent_7 & 0xFFFF
    240            }
    241          
    242            // Discard unknown events
    243            return 0;
   \                     ??SampleApp_ProcessEvent_9:
   \   000165   7A00         MOV     R2,#0x0
   \   000167   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_8:
   \   000169   7F08         MOV     R7,#0x8
   \   00016B   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00016E                REQUIRE _A_P0
    244          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EC           MOV     A,R4
   \   000002   F8           MOV     R0,A
   \   000003   ED           MOV     A,R5
   \   000004   F9           MOV     R1,A
   \   000005   7A0A         MOV     R2,#0xa
   \   000007   7B00         MOV     R3,#0x0
   \   000009   22           RET
    245          
    246          /****/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    247          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    248          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    249            
    250            switch ( pkt->clusterId )
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   640A         XRL     A,#0xa
   \   00000F   7002         JNZ     ??SampleApp_MessageMSGCB_0
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \                     ??SampleApp_MessageMSGCB_0:
   \   000013   7025         JNZ     ??SampleApp_MessageMSGCB_1
    251            {//Ð­µ÷Æ÷½ÓÊÕÊý¾Ý´¦Àíº¯Êý
    252              case SAMPLEAPP_END1:
    253               HalUARTWrite(0,&pkt->cmd.Data[0],18);//pkt->cmd.DataLength); //
   \   000015                ; Setup parameters for call to function HalUARTWrite
   \   000015   7C12         MOV     R4,#0x12
   \   000017   7D00         MOV     R5,#0x0
   \   000019   EA           MOV     A,R2
   \   00001A   2422         ADD     A,#0x22
   \   00001C   F582         MOV     DPL,A
   \   00001E   EB           MOV     A,R3
   \   00001F   3400         ADDC    A,#0x0
   \   000021   F583         MOV     DPH,A
   \   000023   E0           MOVX    A,@DPTR
   \   000024   FA           MOV     R2,A
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   FB           MOV     R3,A
   \   000028   7900         MOV     R1,#0x0
   \   00002A   12....       LCALL   ??HalUARTWrite?relay
    254               HalUARTWrite(0,",$",2);  // »Ø³µ»»ÐÐ
   \   00002D                ; Setup parameters for call to function HalUARTWrite
   \   00002D   7C02         MOV     R4,#0x2
   \   00002F   7D00         MOV     R5,#0x0
   \   000031   7A..         MOV     R2,#`?<Constant ",$">` & 0xff
   \   000033   7B..         MOV     R3,#(`?<Constant ",$">` >> 8) & 0xff
   \   000035   7900         MOV     R1,#0x0
   \   000037   12....       LCALL   ??HalUARTWrite?relay
    255              //HalUARTWrite(0,"\n",1);  // »Ø³µ»»ÐÐ
    256               break;
    257          
    258            }
    259          }
   \                     ??SampleApp_MessageMSGCB_1:
   \   00003A   D083         POP     DPH
   \   00003C   D082         POP     DPL
   \   00003E   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hello World\\n">`:
   \   000000   48656C6C     DB "Hello World\012"
   \            6F20576F
   \            726C640A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ",$">`:
   \   000000   2C2400       DB ",$"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_39000000:
   \   000000   00000039     DD 39000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42c80000:
   \   000000   0000C842     DD 42C80000H

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     SampleApp_Init                  0      0      9
       -> MT_UartInit                0      0     18
       -> MT_UartRegisterTaskID      0      0     18
       -> HalUARTWrite               0      0     18
       -> afRegister                 0      0     18
     SampleApp_MessageMSGCB          2      0     16
       -> HalUARTWrite               4      0      0
       -> HalUARTWrite               4      0      0
     SampleApp_ProcessEvent          0      0     25
       -> osal_msg_receive           0      0     32
       -> osal_start_timerEx         0      0     32
       -> osal_msg_deallocate        0      0     32
       -> osal_msg_receive           0      0     32
       -> SampleApp_MessageMSGCB     0      0     32
       -> HalAdcRead                 0      0     32
       -> AF_DataRequest             0      0     50
       -> osal_rand                  0      0     32
       -> osal_start_timerEx         0      0     32


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _A_P0                             1
     P0INP                             1
     P0SEL                             1
     P0DIR                             1
     SampleApp_ClusterList             6
     SampleApp_SimpleDesc             12
     SampleApp_epDesc                  6
     SampleApp_TaskID                  1
     SampleApp_NwkState                1
     SampleApp_TransID                 1
     SampleApp_Periodic_DstAddr       12
     SampleApp_Flash_DstAddr          12
     Point_To_Point_DstAddr           12
     Send_Message                     21
     SampleApp_Init                  106
     SampleApp_ProcessEvent          366
     ?Subroutine0                     10
     SampleApp_MessageMSGCB           65
     ??SampleApp_Init?relay            6
     ??SampleApp_ProcessEvent?relay    6
     ??SampleApp_MessageMSGCB?relay    6
     ?<Constant "Hello World\n">      13
     ?<Constant ",$">                  3
     __Constant_39000000               4
     __Constant_42c80000               4

 
 547 bytes in segment BANKED_CODE
  18 bytes in segment BANK_RELAYS
   4 bytes in segment SFR_AN
  42 bytes in segment XDATA_ROM_C
  66 bytes in segment XDATA_Z
 
 565 bytes of CODE  memory
  34 bytes of CONST memory (+ 8 bytes shared)
   0 bytes of DATA  memory (+ 4 bytes shared)
  66 bytes of XDATA memory

Errors: none
Warnings: 1
