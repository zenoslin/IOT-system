###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         22/Apr/2017  21:31:23 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\电子设计201512\0029-PM2.5 温湿度                #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\S #
#                          ource\SampleApp.c                                  #
#    Command line       =  -f "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"      #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"     #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF00                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "F:\电子设计201512\0029-PM2 #
#                          .5 温湿度  4.23\程序\终端\Projects\zstack\Samples\ #
#                          SampleApp\Source\SampleApp.c" -D ZTOOL_P1 -D       #
#                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D        #
#                          HAL_ADC -lC "F:\电子设计201512\0029-PM2.5 温湿度   #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\List\" -lA                   #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\List\" --diag_suppress       #
#                          Pe001,Pa010 -o "F:\电子设计201512\0029-PM2.5       #
#                          温湿度  4.23\程序\终端\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\CoordinatorEB\Obj\" -e             #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\" -I "F:\电子设计201512\0029-PM2.5 温湿度  #
#                           4.23\程序\终端\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\Source\" -I "F:\电子设计201512\0029-PM #
#                          2.5 温湿度  4.23\程序\终端\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\" -I   #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\hal\include\"    #
#                          -I "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\hal\target\CC253 #
#                          0EB\" -I "F:\电子设计201512\0029-PM2.5 温湿度      #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\mac\include\"    #
#                          -I "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\mac\high_level\" #
#                           -I "F:\电子设计201512\0029-PM2.5 温湿度           #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\mac\low_level\sr #
#                          f04\" -I "F:\电子设计201512\0029-PM2.5 温湿度      #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\mac\low_level\sr #
#                          f04\single_chip\" -I "F:\电子设计201512\0029-PM2.5 #
#                           温湿度  4.23\程序\终端\Projects\zstack\Samples\Sa #
#                          mpleApp\CC2530DB\..\..\..\..\..\Components\mt\"    #
#                          -I "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\osal\include\"   #
#                          -I "F:\电子设计201512\0029-PM2.5 温湿度            #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\services\saddr\" #
#                           -I "F:\电子设计201512\0029-PM2.5 温湿度           #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\services\sdata\" #
#                           -I "F:\电子设计201512\0029-PM2.5 温湿度           #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\af\" -I    #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\nwk\" -I   #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\sapi\" -I  #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\sec\" -I   #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\sys\" -I   #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\zdo\" -I   #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\zmac\" -I        #
#                          "F:\电子设计201512\0029-PM2.5 温湿度               #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\zmac\f8w\" -Ohz  #
#                          --require_prototypes                               #
#    List file          =  F:\电子设计201512\0029-PM2.5 温湿度                #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\List\SampleApp.lst           #
#    Object file        =  F:\电子设计201512\0029-PM2.5 温湿度                #
#                          4.23\程序\终端\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\Obj\SampleApp.r51            #
#                                                                             #
#                                                                             #
###############################################################################

F:\电子设计201512\0029-PM2.5 温湿度  4.23\程序\终端\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          
      2          /*********************************************************************
      3           * INCLUDES
      4           */
      5          #include "OSAL.h"
      6          #include "ZGlobals.h"
      7          #include "AF.h"
      8          #include "aps_groups.h"
      9          #include "ZDApp.h"
     10          
     11          #include "SampleApp.h"
     12          #include "SampleAppHw.h"
     13          
     14          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf4
   \   unsigned char volatile __sfr P1SEL
   \                     P1SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf6
   \   unsigned char volatile __sfr P1INP
   \                     P1INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
     15          
     16          /* HAL */
     17          #include "hal_lcd.h"
     18          #include "hal_led.h"
     19          #include "hal_key.h"
     20          
     21          #include  "MT_UART.h" //此处用于串口
     22          
     23          #include  "hal_adc.h"   //
     24          #include  "stdio.h"   //
     25          #include  "DHT11.h"   //温湿度专用
     26          
     27          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     28          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0000         DW 0
     29          {
     30            SAMPLEAPP_PERIODIC_CLUSTERID,
     31            SAMPLEAPP_FLASH_CLUSTERID
     32          };
     33          

   \                                 In  segment XDATA_ROM_C, align 1
     34          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   03           DB 3
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   03           DB 3
   \   00000A   ....         DW SampleApp_ClusterList
     35          {
     36            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
     37            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     38            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     39            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     40            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     41            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     42            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
     43            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     44            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
     45          };
     46          
     47          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     48          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     49          
     50          /*********************************************************************
     51           * EXTERNAL VARIABLES
     52           */
     53          
     54          /*********************************************************************
     55           * EXTERNAL FUNCTIONS
     56           */
     57          
     58          /*********************************************************************
     59           * LOCAL VARIABLES
     60           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     61          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     62                                    // This variable will be received when
     63                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     64          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     65          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     66          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     67          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     68          afAddrType_t SampleApp_Periodic_DstAddr;
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     69          afAddrType_t SampleApp_Flash_DstAddr;
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     70          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     71          afAddrType_t Point_To_Point_DstAddr;//网蜂点对点通信定义
   \                     Point_To_Point_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     72          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     73          aps_Group_t SampleApp_Group;
   \                     SampleApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
     74          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     75          uint8 SampleAppPeriodicCounter = 0;
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     76          uint8 SampleAppFlashCounter = 0;
   \                     SampleAppFlashCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     77          
     78          /*********************************************************************
     79           * LOCAL FUNCTIONS
     80           */
     81          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
     82          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
     83          void SampleApp_SendPeriodicMessage( void );
     84          void SampleApp_SendFlashMessage( uint16 flashTime );
     85          void SampleApp_SendPointToPointMessage(void );

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     86          uint8 Send_Message[21];
   \                     Send_Message:
   \   000000                DS 21
   \   000015                REQUIRE __INIT_XDATA_Z
     87          
     88          #define Pulse P1_6 
     89          #define Beep P1_3
     90          
     91          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     92          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
     93          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
     94            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
     95            SampleApp_NwkState = DEV_INIT;
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
     96            SampleApp_TransID = 0;
   \   000011   90....       MOV     DPTR,#SampleApp_TransID
   \   000014   E4           CLR     A
   \   000015   F0           MOVX    @DPTR,A
     97            
     98            MT_UartInit();//串口初始化
   \   000016                ; Setup parameters for call to function MT_UartInit
   \   000016   12....       LCALL   ??MT_UartInit?relay
     99            MT_UartRegisterTaskID(task_id);//登记任务号
   \   000019                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000019   EE           MOV     A,R6
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??MT_UartRegisterTaskID?relay
    100            HalUARTWrite(0,"Hello World\n",12); //（串口0，'字符'，字符个数。）
   \   00001E                ; Setup parameters for call to function HalUARTWrite
   \   00001E   7C0C         MOV     R4,#0xc
   \   000020   7D00         MOV     R5,#0x0
   \   000022   7A..         MOV     R2,#`?<Constant "Hello World\\n">` & 0xff
   \   000024   7B..         MOV     R3,#(`?<Constant "Hello World\\n">` >> 8) & 0xff
   \   000026   7900         MOV     R1,#0x0
   \   000028   12....       LCALL   ??HalUARTWrite?relay
    101            //温湿度传感器初始化 P1.7
    102            P1SEL &=~0x80;
   \   00002B   53F47F       ANL     0xf4,#0x7f
    103            
    104            P1SEL &=~0x40; //作为普通 IO 口
   \   00002E   53F4BF       ANL     0xf4,#0xbf
    105            P1DIR |= 0x40; //P1_0 定义为输出
   \   000031   43FE40       ORL     0xfe,#0x40
    106            P1INP |= 0X40; //打开下拉  
   \   000034   43F640       ORL     0xf6,#0x40
    107            
    108            P1SEL &=~0x08; //作为普通 IO 口
   \   000037   53F4F7       ANL     0xf4,#0xf7
    109            P1DIR |= 0x08; //P1_0 定义为输出
   \   00003A   43FE08       ORL     0xfe,#0x8
    110            P1INP |= 0x08; //打开下拉  
   \   00003D   43F608       ORL     0xf6,#0x8
    111            // Device hardwa6re initialization can be added here or in main() (Zmain.c).
    112            // If the hardware is application specific - add it here.
    113            // If the hardware is other parts of the device add it in main().
    114          
    115           #if defined ( BUILD_ALL_DEVICES )
    116            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    117            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    118            // together - if they are - we will start up a coordinator. Otherwise,
    119            // the device will start as a router.
    120            if ( readCoordinatorJumper() )
    121              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    122            else
    123              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    124          #endif // BUILD_ALL_DEVICES
    125          
    126          #if defined ( HOLD_AUTO_START )
    127            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    128            //  from starting the device and wait for the application to
    129            //  start the device.
    130            ZDOInitDevice(0);
    131          #endif
    132          
    133            
    134            // g广播通讯定义
    135              Point_To_Point_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;//点播
   \   000040   90....       MOV     DPTR,#Point_To_Point_DstAddr + 8
   \   000043   740F         MOV     A,#0xf
   \   000045   F0           MOVX    @DPTR,A
    136              Point_To_Point_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   000046   A3           INC     DPTR
   \   000047   7414         MOV     A,#0x14
   \   000049   F0           MOVX    @DPTR,A
    137              Point_To_Point_DstAddr.addr.shortAddr = 0xFFFF; //发给协调器
   \   00004A   90....       MOV     DPTR,#Point_To_Point_DstAddr
   \   00004D   74FF         MOV     A,#-0x1
   \   00004F   F0           MOVX    @DPTR,A
   \   000050   A3           INC     DPTR
   \   000051   F0           MOVX    @DPTR,A
    138          
    139          
    140            // Fill out the endpoint description.
    141            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   000052   90....       MOV     DPTR,#SampleApp_epDesc
   \   000055   7414         MOV     A,#0x14
   \   000057   F0           MOVX    @DPTR,A
    142            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   000058   A3           INC     DPTR
   \   000059   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   00005B   F0           MOVX    @DPTR,A
   \   00005C   A3           INC     DPTR
   \   00005D   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   00005F   F0           MOVX    @DPTR,A
    143            SampleApp_epDesc.simpleDesc
    144                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   000060   A3           INC     DPTR
   \   000061   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000063   F0           MOVX    @DPTR,A
   \   000064   A3           INC     DPTR
   \   000065   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   000067   F0           MOVX    @DPTR,A
    145            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   000068   A3           INC     DPTR
   \   000069   E4           CLR     A
   \   00006A   F0           MOVX    @DPTR,A
    146          
    147            // Register the endpoint description with the AF
    148            afRegister( &SampleApp_epDesc );
   \   00006B                ; Setup parameters for call to function afRegister
   \   00006B   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   00006D   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   00006F   12....       LCALL   ??afRegister?relay
    149          
    150            // Register for all key events - This app will handle all key events
    151            RegisterForKeys( SampleApp_TaskID );
   \   000072                ; Setup parameters for call to function RegisterForKeys
   \   000072   90....       MOV     DPTR,#SampleApp_TaskID
   \   000075   E0           MOVX    A,@DPTR
   \   000076   F9           MOV     R1,A
   \   000077   12....       LCALL   ??RegisterForKeys?relay
    152          
    153            // By default, all devices start out in Group 1
    154            SampleApp_Group.ID = 0x0001;
   \   00007A   90....       MOV     DPTR,#SampleApp_Group
   \   00007D   7401         MOV     A,#0x1
   \   00007F   F0           MOVX    @DPTR,A
   \   000080   A3           INC     DPTR
   \   000081   E4           CLR     A
   \   000082   F0           MOVX    @DPTR,A
    155            osal_memcpy( SampleApp_Group.name, "Group 1", 7  );
   \   000083                ; Setup parameters for call to function osal_memcpy
   \   000083   75....       MOV     ?V0 + 0,#`?<Constant "Group 1">` & 0xff
   \   000086   75....       MOV     ?V0 + 1,#(`?<Constant "Group 1">` >> 8) & 0xff
   \   000089   F5..         MOV     ?V0 + 2,A
   \   00008B   78..         MOV     R0,#?V0 + 0
   \   00008D   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000090   7C07         MOV     R4,#0x7
   \   000092   7D00         MOV     R5,#0x0
   \   000094   7A..         MOV     R2,#(SampleApp_Group + 2) & 0xff
   \   000096   7B..         MOV     R3,#((SampleApp_Group + 2) >> 8) & 0xff
   \   000098   12....       LCALL   ??osal_memcpy?relay
   \   00009B   7403         MOV     A,#0x3
   \   00009D   12....       LCALL   ?DEALLOC_XSTACK8
    156            aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \   0000A0                ; Setup parameters for call to function aps_AddGroup
   \   0000A0   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   0000A2   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   0000A4   7914         MOV     R1,#0x14
   \   0000A6   12....       LCALL   ??aps_AddGroup?relay
    157          
    158          #if defined ( LCD_SUPPORTED )
    159            HalLcdWriteString( "SampleApp", HAL_LCD_LINE_1 );
    160          #endif
    161          }
   \   0000A9   7F03         MOV     R7,#0x3
   \   0000AB   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000AE                REQUIRE P1SEL
   \   0000AE                REQUIRE P1DIR
   \   0000AE                REQUIRE P1INP
    162          
    163          /*********************************************************************
    164           * @fn      SampleApp_ProcessEvent
    165           *
    166           * @brief   Generic Application Task event processor.  This function
    167           *          is called to process all events for the task.  Events
    168           *          include timers, messages and any other user defined events.
    169           *
    170           * @param   task_id  - The OSAL assigned task ID.
    171           * @param   events - events to process.  This is a bit map and can
    172           *                   contain more than one event.
    173           *
    174           * @return  none
    175           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    176          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    177          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    178            afIncomingMSGPacket_t *MSGpkt;
    179            (void)task_id;  // Intentionally unreferenced parameter
    180          
    181            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   605D         JZ      ??SampleApp_ProcessEvent_0
    182            {
    183              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   8026         SJMP    ??SampleApp_ProcessEvent_1
    184              while ( MSGpkt )
    185              {
    186                switch ( MSGpkt->hdr.event )
    187                {
    188                  // Received when a key is pressed
    189                  case KEY_CHANGE:
    190                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    191                    break;
    192          
    193                  // Received when a messages is received (OTA) for this endpoint
    194                  case AF_INCOMING_MSG_CMD:
    195                    SampleApp_MessageMSGCB( MSGpkt );
    196                    break;
    197          
    198                  // Received whenever the device changes state in the network
    199                  case ZDO_STATE_CHANGE:
    200                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   F0           MOVX    @DPTR,A
    201                    if ( //(SampleApp_NwkState == DEV_ZB_COORD)|| //协调器不给自己点播
    202                         (SampleApp_NwkState == DEV_ROUTER)
    203                        || (SampleApp_NwkState == DEV_END_DEVICE) )
   \   000015   6407         XRL     A,#0x7
   \   000017   6005         JZ      ??SampleApp_ProcessEvent_3
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   6406         XRL     A,#0x6
   \   00001C   7010         JNZ     ??SampleApp_ProcessEvent_4
    204                    {
    205                      // Start sending the periodic message in a regular interval.
    206                      osal_start_timerEx( SampleApp_TaskID,
    207                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    208                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \                     ??SampleApp_ProcessEvent_3:
   \   00001E                ; Setup parameters for call to function osal_start_timerEx
   \   00001E   7CDC         MOV     R4,#-0x24
   \   000020   7D05         MOV     R5,#0x5
   \   000022   7A01         MOV     R2,#0x1
   \   000024   7B00         MOV     R3,#0x0
   \   000026   90....       MOV     DPTR,#SampleApp_TaskID
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F9           MOV     R1,A
   \   00002B   12....       LCALL   ??osal_start_timerEx?relay
    209                    }
    210                    else
    211                    {
    212                      // Device is no longer in the network
    213                    }
    214                    break;
    215          
    216                  default:
    217                    break;
    218                }
    219          
    220                // Release the memory
    221                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_4:
   \   00002E                ; Setup parameters for call to function osal_msg_deallocate
   \   00002E   AA..         MOV     R2,?V0 + 0
   \   000030   AB..         MOV     R3,?V0 + 1
   \   000032   12....       LCALL   ??osal_msg_deallocate?relay
    222          
    223                // Next - if one is available
    224                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000035                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   000035   90....       MOV     DPTR,#SampleApp_TaskID
   \   000038   E0           MOVX    A,@DPTR
   \   000039   F9           MOV     R1,A
   \   00003A   12....       LCALL   ??osal_msg_receive?relay
   \   00003D   8A..         MOV     ?V0 + 0,R2
   \   00003F   8B..         MOV     ?V0 + 1,R3
   \   000041   E5..         MOV     A,?V0 + 0
   \   000043   45..         ORL     A,?V0 + 1
   \   000045   601A         JZ      ??SampleApp_ProcessEvent_5
   \   000047   85..82       MOV     DPL,?V0 + 0
   \   00004A   85..83       MOV     DPH,?V0 + 1
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   24E6         ADD     A,#-0x1a
   \   000050   6006         JZ      ??SampleApp_ProcessEvent_6
   \   000052   2449         ADD     A,#0x49
   \   000054   60B9         JZ      ??SampleApp_ProcessEvent_2
   \   000056   80D6         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_6:
   \   000058                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000058   AA..         MOV     R2,?V0 + 0
   \   00005A   AB..         MOV     R3,?V0 + 1
   \   00005C   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   00005F   80CD         SJMP    ??SampleApp_ProcessEvent_4
    225              }
    226          
    227              // return unprocessed events
    228              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_5:
   \   000061   EE           MOV     A,R6
   \   000062   FA           MOV     R2,A
   \   000063   EF           MOV     A,R7
   \   000064   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_7:
   \   000066   FB           MOV     R3,A
   \   000067   02....       LJMP    ??SampleApp_ProcessEvent_8 & 0xFFFF
    229            }
    230          
    231            // Send a message out - This event is generated by a timer
    232            //  (setup in SampleApp_Init()).
    233            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \                     ??SampleApp_ProcessEvent_0:
   \   00006A   EE           MOV     A,R6
   \   00006B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00006D   4003         JC      $+5
   \   00006F   02....       LJMP    ??SampleApp_ProcessEvent_9 & 0xFFFF
    234            {
    235              DHT11();   //温度检测  
   \   000072                ; Setup parameters for call to function DHT11
   \   000072   12....       LCALL   ??DHT11?relay
    236              Pulse=0;
   \   000075   C296         CLR     0x90.6
    237              MicroWait(280);
   \   000077                ; Setup parameters for call to function Onboard_wait
   \   000077   7A18         MOV     R2,#0x18
   \   000079   7B01         MOV     R3,#0x1
   \   00007B   12....       LCALL   ??Onboard_wait?relay
    238               //终端的代码主要看这里的  
    239                //调用协议栈里的AD采集函数，采集风速传感器输出的电压值
    240               uint16 PM25= HalAdcRead(HAL_ADC_CHANNEL_4, HAL_ADC_RESOLUTION_14);
   \   00007E                ; Setup parameters for call to function HalAdcRead
   \   00007E   7A04         MOV     R2,#0x4
   \   000080   7904         MOV     R1,#0x4
   \   000082   12....       LCALL   ??HalAdcRead?relay
   \   000085   8A..         MOV     ?V0 + 4,R2
   \   000087   8B..         MOV     ?V0 + 5,R3
    241              //Speed=(float)Speed/8192.0*3300/10.0;//采集的电压值转换为速度
    242          //8192是分辨率 2的13次方
    243              Pulse=1;
   \   000089   D296         SETB    0x90.6
    244              sprintf(Send_Message,"#,%04d",PM25);//数字转换为字符格式
                             ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00008B                ; Setup parameters for call to function sprintf
   \   00008B   78..         MOV     R0,#?V0 + 4
   \   00008D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000090   7C..         MOV     R4,#`?<Constant "#,%04d">` & 0xff
   \   000092   7D..         MOV     R5,#(`?<Constant "#,%04d">` >> 8) & 0xff
   \   000094   7A..         MOV     R2,#Send_Message & 0xff
   \   000096   7B..         MOV     R3,#(Send_Message >> 8) & 0xff
   \   000098   12....       LCALL   ??sprintf?relay
   \   00009B   7402         MOV     A,#0x2
   \   00009D   12....       LCALL   ?DEALLOC_XSTACK8
    245              Send_Message[6]=',';
   \   0000A0   90....       MOV     DPTR,#Send_Message + 6
   \   0000A3   742C         MOV     A,#0x2c
   \   0000A5   F0           MOVX    @DPTR,A
    246              Send_Message[7]=wendu_shi+48;
   \   0000A6   90....       MOV     DPTR,#wendu_shi
   \   0000A9   E0           MOVX    A,@DPTR
   \   0000AA   2430         ADD     A,#0x30
   \   0000AC   90....       MOV     DPTR,#Send_Message + 7
   \   0000AF   F0           MOVX    @DPTR,A
    247              Send_Message[8]=wendu_ge+48;
   \   0000B0   90....       MOV     DPTR,#wendu_ge
   \   0000B3   E0           MOVX    A,@DPTR
   \   0000B4   2430         ADD     A,#0x30
   \   0000B6   90....       MOV     DPTR,#Send_Message + 8
   \   0000B9   F0           MOVX    @DPTR,A
    248              Send_Message[9]=',';
   \   0000BA   A3           INC     DPTR
   \   0000BB   742C         MOV     A,#0x2c
   \   0000BD   F0           MOVX    @DPTR,A
    249              Send_Message[10]=shidu_shi+48;
   \   0000BE   90....       MOV     DPTR,#shidu_shi
   \   0000C1   E0           MOVX    A,@DPTR
   \   0000C2   2430         ADD     A,#0x30
   \   0000C4   90....       MOV     DPTR,#Send_Message + 10
   \   0000C7   F0           MOVX    @DPTR,A
    250              Send_Message[11]=shidu_ge+48;
   \   0000C8   90....       MOV     DPTR,#shidu_ge
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   2430         ADD     A,#0x30
   \   0000CE   90....       MOV     DPTR,#Send_Message + 11
   \   0000D1   F0           MOVX    @DPTR,A
    251              Send_Message[12]=',';
   \   0000D2   A3           INC     DPTR
   \   0000D3   742C         MOV     A,#0x2c
   \   0000D5   F0           MOVX    @DPTR,A
    252            uint16 Light= HalAdcRead(HAL_ADC_CHANNEL_5, HAL_ADC_RESOLUTION_14);
   \   0000D6                ; Setup parameters for call to function HalAdcRead
   \   0000D6   7A04         MOV     R2,#0x4
   \   0000D8   7905         MOV     R1,#0x5
   \   0000DA   12....       LCALL   ??HalAdcRead?relay
   \   0000DD   8A..         MOV     ?V0 + 2,R2
   \   0000DF   8B..         MOV     ?V0 + 3,R3
    253            Light=8192-Light;
    254            Light=(float)Light/8192.0*100; 
                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   0000E1   E4           CLR     A
   \   0000E2   C3           CLR     C
   \   0000E3   95..         SUBB    A,?V0 + 2
   \   0000E5   F5..         MOV     ?V0 + 0,A
   \   0000E7   7420         MOV     A,#0x20
   \   0000E9   95..         SUBB    A,?V0 + 3
   \   0000EB   F5..         MOV     ?V0 + 1,A
   \   0000ED   E4           CLR     A
   \   0000EE   F5..         MOV     ?V0 + 2,A
   \   0000F0   F5..         MOV     ?V0 + 3,A
   \   0000F2   78..         MOV     R0,#?V0 + 0
   \   0000F4   12....       LCALL   ?UL_TO_FLT
   \   0000F7   90....       MOV     DPTR,#__Constant_39000000
   \   0000FA   78..         MOV     R0,#?V0 + 8
   \   0000FC   12....       LCALL   ?L_MOV_X
   \   0000FF   78..         MOV     R0,#?V0 + 0
   \   000101   79..         MOV     R1,#?V0 + 8
   \   000103   12....       LCALL   ?FLT_MUL
   \   000106   90....       MOV     DPTR,#__Constant_42c80000
   \   000109   78..         MOV     R0,#?V0 + 8
   \   00010B   12....       LCALL   ?L_MOV_X
   \   00010E   78..         MOV     R0,#?V0 + 0
   \   000110   79..         MOV     R1,#?V0 + 8
   \   000112   12....       LCALL   ?FLT_MUL
   \   000115   78..         MOV     R0,#?V0 + 0
   \   000117   12....       LCALL   ?FLT_TO_L
   \   00011A   85....       MOV     ?V0 + 2,?V0 + 0
   \   00011D   85....       MOV     ?V0 + 3,?V0 + 1
    255            if(Light>99)  Light=99;
   \   000120   C3           CLR     C
   \   000121   E5..         MOV     A,?V0 + 2
   \   000123   9464         SUBB    A,#0x64
   \   000125   E5..         MOV     A,?V0 + 3
   \   000127   9400         SUBB    A,#0x0
   \   000129   4006         JC      ??SampleApp_ProcessEvent_10
   \   00012B   75..63       MOV     ?V0 + 2,#0x63
   \   00012E   75..00       MOV     ?V0 + 3,#0x0
    256            sprintf(&Send_Message[13],"%02d",Light);//数字转换为字符格式
                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??SampleApp_ProcessEvent_10:
   \   000131                ; Setup parameters for call to function sprintf
   \   000131   78..         MOV     R0,#?V0 + 2
   \   000133   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000136   7C..         MOV     R4,#`?<Constant "%02d">` & 0xff
   \   000138   7D..         MOV     R5,#(`?<Constant "%02d">` >> 8) & 0xff
   \   00013A   7A..         MOV     R2,#(Send_Message + 13) & 0xff
   \   00013C   7B..         MOV     R3,#((Send_Message + 13) >> 8) & 0xff
   \   00013E   12....       LCALL   ??sprintf?relay
   \   000141   7402         MOV     A,#0x2
   \   000143   12....       LCALL   ?DEALLOC_XSTACK8
    257            
    258            uint16 MQ2= HalAdcRead(HAL_ADC_CHANNEL_6, HAL_ADC_RESOLUTION_14);
   \   000146                ; Setup parameters for call to function HalAdcRead
   \   000146   7A04         MOV     R2,#0x4
   \   000148   7906         MOV     R1,#0x6
   \   00014A   12....       LCALL   ??HalAdcRead?relay
   \   00014D   8A..         MOV     ?V0 + 0,R2
   \   00014F   8B..         MOV     ?V0 + 1,R3
    259            //MQ2=8192-MQ2;
    260            MQ2=(float)MQ2/8192.0*100; 
                      ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000151   E4           CLR     A
   \   000152   F5..         MOV     ?V0 + 2,A
   \   000154   F5..         MOV     ?V0 + 3,A
   \   000156   78..         MOV     R0,#?V0 + 0
   \   000158   12....       LCALL   ?UL_TO_FLT
   \   00015B   90....       MOV     DPTR,#__Constant_39000000
   \   00015E   78..         MOV     R0,#?V0 + 8
   \   000160   12....       LCALL   ?L_MOV_X
   \   000163   78..         MOV     R0,#?V0 + 0
   \   000165   79..         MOV     R1,#?V0 + 8
   \   000167   12....       LCALL   ?FLT_MUL
   \   00016A   90....       MOV     DPTR,#__Constant_42c80000
   \   00016D   78..         MOV     R0,#?V0 + 8
   \   00016F   12....       LCALL   ?L_MOV_X
   \   000172   78..         MOV     R0,#?V0 + 0
   \   000174   79..         MOV     R1,#?V0 + 8
   \   000176   12....       LCALL   ?FLT_MUL
   \   000179   78..         MOV     R0,#?V0 + 0
   \   00017B   12....       LCALL   ?FLT_TO_L
    261            if(MQ2>99)  MQ2=99;
   \   00017E   C3           CLR     C
   \   00017F   E5..         MOV     A,?V0 + 0
   \   000181   9464         SUBB    A,#0x64
   \   000183   E5..         MOV     A,?V0 + 1
   \   000185   9400         SUBB    A,#0x0
   \   000187   4006         JC      ??SampleApp_ProcessEvent_11
   \   000189   75..63       MOV     ?V0 + 0,#0x63
   \   00018C   75..00       MOV     ?V0 + 1,#0x0
    262            sprintf(&Send_Message[15],",%02d",MQ2);//数字转换为字符格式
                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??SampleApp_ProcessEvent_11:
   \   00018F                ; Setup parameters for call to function sprintf
   \   00018F   78..         MOV     R0,#?V0 + 0
   \   000191   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000194   7C..         MOV     R4,#`?<Constant ",%02d">` & 0xff
   \   000196   7D..         MOV     R5,#(`?<Constant ",%02d">` >> 8) & 0xff
   \   000198   7A..         MOV     R2,#(Send_Message + 15) & 0xff
   \   00019A   7B..         MOV     R3,#((Send_Message + 15) >> 8) & 0xff
   \   00019C   12....       LCALL   ??sprintf?relay
   \   00019F   7402         MOV     A,#0x2
   \   0001A1   12....       LCALL   ?DEALLOC_XSTACK8
    263            
    264            if((MQ2>50)||(PM25)>2000)
   \   0001A4   C3           CLR     C
   \   0001A5   E5..         MOV     A,?V0 + 0
   \   0001A7   9433         SUBB    A,#0x33
   \   0001A9   E5..         MOV     A,?V0 + 1
   \   0001AB   9400         SUBB    A,#0x0
   \   0001AD   500B         JNC     ??SampleApp_ProcessEvent_12
   \   0001AF   C3           CLR     C
   \   0001B0   E5..         MOV     A,?V0 + 4
   \   0001B2   94D1         SUBB    A,#-0x2f
   \   0001B4   E5..         MOV     A,?V0 + 5
   \   0001B6   9407         SUBB    A,#0x7
   \   0001B8   4004         JC      ??SampleApp_ProcessEvent_13
    265              Beep=0;
   \                     ??SampleApp_ProcessEvent_12:
   \   0001BA   C293         CLR     0x90.3
   \   0001BC   8002         SJMP    ??SampleApp_ProcessEvent_14
    266            else Beep=1;
   \                     ??SampleApp_ProcessEvent_13:
   \   0001BE   D293         SETB    0x90.3
    267             // HalUARTWrite(0,Send_Message,8);
    268             // HalUARTWrite(0,"\n",1);    
    269              //数据发送函数，将采集到的风速信息发送给协调器
    270              if ( AF_DataRequest( &Point_To_Point_DstAddr,
    271                                   &SampleApp_epDesc,
    272                                   SAMPLEAPP_POINT_TO_POINT_CLUSTERID,
    273                                   18,//osal_strlen(Send_Message),//发送数据个数
    274                                   Send_Message,//发送数据指针
    275                                   &SampleApp_TransID,
    276                                   AF_DISCV_ROUTE,
    277                                   AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \                     ??SampleApp_ProcessEvent_14:
   \   0001C0                ; Setup parameters for call to function AF_DataRequest
   \   0001C0   75..1E       MOV     ?V0 + 0,#0x1e
   \   0001C3   78..         MOV     R0,#?V0 + 0
   \   0001C5   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001C8   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   0001CB   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   0001CE   78..         MOV     R0,#?V0 + 0
   \   0001D0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001D3   75....       MOV     ?V0 + 0,#Send_Message & 0xff
   \   0001D6   75....       MOV     ?V0 + 1,#(Send_Message >> 8) & 0xff
   \   0001D9   78..         MOV     R0,#?V0 + 0
   \   0001DB   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001DE   75..12       MOV     ?V0 + 0,#0x12
   \   0001E1   75..00       MOV     ?V0 + 1,#0x0
   \   0001E4   78..         MOV     R0,#?V0 + 0
   \   0001E6   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001E9   75..03       MOV     ?V0 + 0,#0x3
   \   0001EC   78..         MOV     R0,#?V0 + 0
   \   0001EE   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001F1   7920         MOV     R1,#0x20
   \   0001F3   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   0001F5   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   0001F7   7A..         MOV     R2,#Point_To_Point_DstAddr & 0xff
   \   0001F9   7B..         MOV     R3,#(Point_To_Point_DstAddr >> 8) & 0xff
   \   0001FB   12....       LCALL   ??AF_DataRequest?relay
   \   0001FE   7409         MOV     A,#0x9
   \   000200   12....       LCALL   ?DEALLOC_XSTACK8
    278              {
    279              }
    280                else
    281                {
    282                  // Error occurred in request to send.
    283                }
    284              
    285               
    286              // Setup to send message again in normal period (+ a little jitter)
    287              //定时函数，每个1500ms发送一次数据给协调器
    288              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    289                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   000203                ; Setup parameters for call to function osal_rand
   \   000203   12....       LCALL   ??osal_rand?relay
   \   000206                ; Setup parameters for call to function osal_start_timerEx
   \   000206   EA           MOV     A,R2
   \   000207   24DC         ADD     A,#-0x24
   \   000209   FC           MOV     R4,A
   \   00020A   E4           CLR     A
   \   00020B   3405         ADDC    A,#0x5
   \   00020D   FD           MOV     R5,A
   \   00020E   7A01         MOV     R2,#0x1
   \   000210   7B00         MOV     R3,#0x0
   \   000212   90....       MOV     DPTR,#SampleApp_TaskID
   \   000215   E0           MOVX    A,@DPTR
   \   000216   F9           MOV     R1,A
   \   000217   12....       LCALL   ??osal_start_timerEx?relay
    290          
    291              // return unprocessed events
    292              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   00021A   EE           MOV     A,R6
   \   00021B   6401         XRL     A,#0x1
   \   00021D   FA           MOV     R2,A
   \   00021E   EF           MOV     A,R7
   \   00021F   02....       LJMP    ??SampleApp_ProcessEvent_7 & 0xFFFF
    293            }
    294          
    295            // Discard unknown events
    296            return 0;
   \                     ??SampleApp_ProcessEvent_9:
   \   000222   7A00         MOV     R2,#0x0
   \   000224   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_8:
   \   000226   7F0C         MOV     R7,#0xc
   \   000228   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00022B                REQUIRE _A_P1
    297          }
    298          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    299          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    300          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    301          }
   \   000000   02....       LJMP    ?BRET
    302          
    303          /****/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    304          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    305          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    306            
    307            switch ( pkt->clusterId )
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   6403         XRL     A,#0x3
   \   00000F   7002         JNZ     ??SampleApp_MessageMSGCB_0
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \                     ??SampleApp_MessageMSGCB_0:
   \   000013   7025         JNZ     ??SampleApp_MessageMSGCB_1
    308            {
    309              case SAMPLEAPP_POINT_TO_POINT_CLUSTERID:
    310               HalUARTWrite(0,&pkt->cmd.Data[0],18);//pkt->cmd.DataLength); //
   \   000015                ; Setup parameters for call to function HalUARTWrite
   \   000015   7C12         MOV     R4,#0x12
   \   000017   7D00         MOV     R5,#0x0
   \   000019   EA           MOV     A,R2
   \   00001A   2422         ADD     A,#0x22
   \   00001C   F582         MOV     DPL,A
   \   00001E   EB           MOV     A,R3
   \   00001F   3400         ADDC    A,#0x0
   \   000021   F583         MOV     DPH,A
   \   000023   E0           MOVX    A,@DPTR
   \   000024   FA           MOV     R2,A
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   FB           MOV     R3,A
   \   000028   7900         MOV     R1,#0x0
   \   00002A   12....       LCALL   ??HalUARTWrite?relay
    311               HalUARTWrite(0,",$",2);  // 回车换行
   \   00002D                ; Setup parameters for call to function HalUARTWrite
   \   00002D   7C02         MOV     R4,#0x2
   \   00002F   7D00         MOV     R5,#0x0
   \   000031   7A..         MOV     R2,#`?<Constant ",$">` & 0xff
   \   000033   7B..         MOV     R3,#(`?<Constant ",$">` >> 8) & 0xff
   \   000035   7900         MOV     R1,#0x0
   \   000037   12....       LCALL   ??HalUARTWrite?relay
    312              //HalUARTWrite(0,"\n",1);  // 回车换行
    313               break;
    314          
    315            }
    316          }
   \                     ??SampleApp_MessageMSGCB_1:
   \   00003A   D083         POP     DPH
   \   00003C   D082         POP     DPL
   \   00003E   02....       LJMP    ?BRET
    317          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    318          void SampleApp_SendPeriodicMessage( void )
   \                     SampleApp_SendPeriodicMessage:
    319          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    320            
    321          }
   \   000000   02....       LJMP    ?BRET
    322          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    323          void SampleApp_SendFlashMessage( uint16 flashTime )
   \                     SampleApp_SendFlashMessage:
    324          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    325          }
   \   000000   02....       LJMP    ?BRET
    326          
    327          /*********************************************************************
    328          *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    329          void SampleApp_SendPointToPointMessage( void )
   \                     SampleApp_SendPointToPointMessage:
    330          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    331           
    332          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPeriodicMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPeriodicMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendFlashMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendFlashMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPointToPointMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPointToPointMessage

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hello World\\n">`:
   \   000000   48656C6C     DB "Hello World\012"
   \            6F20576F
   \            726C640A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Group 1">`:
   \   000000   47726F75     DB "Group 1"
   \            70203100

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "#,%04d">`:
   \   000000   232C2530     DB "#,%04d"
   \            346400  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%02d">`:
   \   000000   25303264     DB "%02d"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ",%02d">`:
   \   000000   2C253032     DB ",%02d"
   \            6400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ",$">`:
   \   000000   2C2400       DB ",$"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_39000000:
   \   000000   00000039     DD 39000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42c80000:
   \   000000   0000C842     DD 42C80000H

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     SampleApp_HandleKeys               0      0      0
     SampleApp_Init                     0      0     14
       -> MT_UartInit                   0      0     22
       -> MT_UartRegisterTaskID         0      0     22
       -> HalUARTWrite                  0      0     22
       -> afRegister                    0      0     22
       -> RegisterForKeys               0      0     22
       -> osal_memcpy                   0      0     28
       -> aps_AddGroup                  0      0     22
     SampleApp_MessageMSGCB             2      0     20
       -> HalUARTWrite                  4      0      0
       -> HalUARTWrite                  4      0      0
     SampleApp_ProcessEvent             0      0     29
       -> osal_msg_receive              0      0     40
       -> osal_start_timerEx            0      0     40
       -> osal_msg_deallocate           0      0     40
       -> osal_msg_receive              0      0     40
       -> SampleApp_MessageMSGCB        0      0     40
       -> DHT11                         0      0     40
       -> Onboard_wait                  0      0     40
       -> HalAdcRead                    0      0     40
       -> sprintf                       0      0     44
       -> HalAdcRead                    0      0     40
       -> sprintf                       0      0     44
       -> HalAdcRead                    0      0     40
       -> sprintf                       0      0     44
       -> AF_DataRequest                0      0     58
       -> osal_rand                     0      0     40
       -> osal_start_timerEx            0      0     40
     SampleApp_SendFlashMessage         0      0      0
     SampleApp_SendPeriodicMessage      0      0      0
     SampleApp_SendPointToPointMessage
                                        0      0      0


   Segment part sizes:

     Function/Label                            Bytes
     --------------                            -----
     _A_P1                                        1
     P1SEL                                        1
     P1INP                                        1
     P1DIR                                        1
     SampleApp_ClusterList                        6
     SampleApp_SimpleDesc                        12
     SampleApp_epDesc                             6
     SampleApp_TaskID                             1
     SampleApp_NwkState                           1
     SampleApp_TransID                            1
     SampleApp_Periodic_DstAddr                  12
     SampleApp_Flash_DstAddr                     12
     Point_To_Point_DstAddr                      12
     SampleApp_Group                             18
     SampleAppPeriodicCounter                     1
     SampleAppFlashCounter                        1
     Send_Message                                21
     SampleApp_Init                             174
     SampleApp_ProcessEvent                     555
     SampleApp_HandleKeys                         3
     SampleApp_MessageMSGCB                      65
     SampleApp_SendPeriodicMessage                3
     SampleApp_SendFlashMessage                   3
     SampleApp_SendPointToPointMessage
                                                  3
     ??SampleApp_Init?relay                       6
     ??SampleApp_ProcessEvent?relay               6
     ??SampleApp_HandleKeys?relay                 6
     ??SampleApp_MessageMSGCB?relay               6
     ??SampleApp_SendPeriodicMessage?relay        6
     ??SampleApp_SendFlashMessage?relay           6
     ??SampleApp_SendPointToPointMessage?relay    6
     ?<Constant "Hello World\n">                 13
     ?<Constant "Group 1">                        8
     ?<Constant "#,%04d">                         7
     ?<Constant "%02d">                           5
     ?<Constant ",%02d">                          6
     ?<Constant ",$">                             3
     __Constant_39000000                          4
     __Constant_42c80000                          4

 
 806 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
   4 bytes in segment SFR_AN
  68 bytes in segment XDATA_ROM_C
  86 bytes in segment XDATA_Z
 
 848 bytes of CODE  memory
  60 bytes of CONST memory (+ 8 bytes shared)
   0 bytes of DATA  memory (+ 4 bytes shared)
  86 bytes of XDATA memory

Errors: none
Warnings: 5
